import React, { useState, useEffect } from "react";
import styles from "./Grid.module.css";

const Grid = ({ asciiArtFromApi }) => {
	const [grid, setGrid] = useState([]);
	useEffect(() => {
		const initialArt =
			asciiArtFromApi.length > 0
				? asciiArtFromApi
				: [
						"################################################################################",
						"################################################################################",
						"######################x=--==+xxxxX##############################################",
						"######################+=--=++xxxxx==+X###Xxx++++==========++++xx################",
						"##########################+=+xxx++=-----==+++xxxxxxxxxxxxxxxx+++==+xX###########",
						"############################=++==---=++xxxxxxxxxxxxxxxxxxxxxxxxxxxxx++x#########",
						"############################+;----=++xxxxxxxxxxxxxxxxxxxxxxxxx+xxxxxxxx+########",
						"############################-;--=+xxxxxxxxxxxxxxxxxxxxxxxxxxx+,-xxxxxxx+x#######",
						"###########################=;-=++xxxxxxxxxxxxxxxxxxxxxxxxxx+xxxx++++++++=+x#####",
						"##########################-;=++xxxxxxxxxxxxxxxxxxxxxxxx=xxX#########Xxxxx+++++##",
						"########################x;-=++xxxxxxxxxxxxxx+++++xxxx+=X#####XXXXXXXXXXXxxx+++X#",
						"#######################+;-=++xxxxxxxxxxxx+x+=+xxxxxx=;-=++xXX###################",
						"#####################X--=+++xxxxxxxx+xxxX#X=++xxxx+;;--=+x######################",
						"####################x--==++xxxxxx+xx#####X=++xxxx-;;--=++#######################",
						"###################+;-==++xxxxx+x#######x=++xxxx;;;--=++########################",
						"##################+;-==+++xxx+x########x=++++xX#;;--==+#########################",
						"#################+;-==+++xxx+X######XX==+++x###X;--==x##########################",
						"################+;--==+++x+x######XXx===xx#####+--==X###########################",
						"###############X;--===++x+X#####XX##+xX########--=+#############################",
						"###############-;--==++++X####xX##############+=+X##############################",
						"##############x;--===+++x###Xx################XX################################",
						"##############-;--===++++##xX###################################################",
						"#############X,;--===++++Xx#####################################################",
						"#############+;---===+++=X######################################################",
						"#############=;---===+++X#######################################################",
						"#############=;---===++x########################################################",
						"#############=;---====+#########################################################",
						"#############=;---====##########################################################",
						"#############+;;--===x##########################################################",
						"#############x,;---==###########################################################",
						"##############;;---=x###########################################################",
						"##############-;---=############################################################",
						"##############=;;----==++xX#####################################################",
						"###########X=,,,;--;----====+x##################################################",
						"#########+;...,,;--;----===++++x################################################",
						"#######X;.....,,,;-;---=++++++++x###############################################",
						"######X........;=-=x###########Xx###############################################",
						"######-....;=xX#################################################################",
						"######...+######################################################################",
						"######-.X#######################################################################",
				  ];

		const artToUse =
			initialArt.length > 0
				? initialArt
				: [
						"################################################################################",
						"################################################################################",
						"######################x=--==+xxxxX##############################################",
						"######################+=--=++xxxxx==+X###Xxx++++==========++++xx################",
						"##########################+=+xxx++=-----==+++xxxxxxxxxxxxxxxx+++==+xX###########",
						"############################=++==---=++xxxxxxxxxxxxxxxxxxxxxxxxxxxxx++x#########",
						"############################+;----=++xxxxxxxxxxxxxxxxxxxxxxxxx+xxxxxxxx+########",
						"############################-;--=+xxxxxxxxxxxxxxxxxxxxxxxxxxx+,-xxxxxxx+x#######",
						"###########################=;-=++xxxxxxxxxxxxxxxxxxxxxxxxxx+xxxx++++++++=+x#####",
						"##########################-;=++xxxxxxxxxxxxxxxxxxxxxxxx=xxX#########Xxxxx+++++##",
						"########################x;-=++xxxxxxxxxxxxxx+++++xxxx+=X#####XXXXXXXXXXXxxx+++X#",
						"#######################+;-=++xxxxxxxxxxxx+x+=+xxxxxx=;-=++xXX###################",
						"#####################X--=+++xxxxxxxx+xxxX#X=++xxxx+;;--=+x######################",
						"####################x--==++xxxxxx+xx#####X=++xxxx-;;--=++#######################",
						"###################+;-==++xxxxx+x#######x=++xxxx;;;--=++########################",
						"##################+;-==+++xxx+x########x=++++xX#;;--==+#########################",
						"#################+;-==+++xxx+X######XX==+++x###X;--==x##########################",
						"################+;--==+++x+x######XXx===xx#####+--==X###########################",
						"###############X;--===++x+X#####XX##+xX########--=+#############################",
						"###############-;--==++++X####xX##############+=+X##############################",
						"##############x;--===+++x###Xx################XX################################",
						"##############-;--===++++##xX###################################################",
						"#############X,;--===++++Xx#####################################################",
						"#############+;---===+++=X######################################################",
						"#############=;---===+++X#######################################################",
						"#############=;---===++x########################################################",
						"#############=;---====+#########################################################",
						"#############=;---====##########################################################",
						"#############+;;--===x##########################################################",
						"#############x,;---==###########################################################",
						"##############;;---=x###########################################################",
						"##############-;---=############################################################",
						"##############=;;----==++xX#####################################################",
						"###########X=,,,;--;----====+x##################################################",
						"#########+;...,,;--;----===++++x################################################",
						"#######X;.....,,,;-;---=++++++++x###############################################",
						"######X........;=-=x###########Xx###############################################",
						"######-....;=xX#################################################################",
						"######...+######################################################################",
						"######-.X#######################################################################",
				  ];

		const newGrid = artToUse.flatMap((row, rowIndex) =>
			row.split("").map((char, colIndex) => ({
				char,
				visible: false,
				id: `${rowIndex}-${colIndex}`,
			}))
		);

		setGrid(newGrid);
	}, [asciiArtFromApi]);

	const numCols = 80;

	const revealArea = (id) => {
		const [rowClicked, colClicked] = id.split("-").map(Number);
		const revealRadius = 3;

		const newGrid = grid.map((cell) => {
			const [rowCurrent, colCurrent] = cell.id.split("-").map(Number);
			const distance = Math.max(
				Math.abs(rowCurrent - rowClicked),
				Math.abs(colCurrent - colClicked)
			);
			if (distance <= revealRadius) {
				return { ...cell, visible: true };
			}
			return cell;
		});

		setGrid(newGrid);
	};

	const revealAllCharacters = () => {
		setGrid(grid.map((cell) => ({ ...cell, visible: true })));
	};

	const clearAllCharacters = () => {
		setGrid(grid.map((cell) => ({ ...cell, visible: false })));
	};

	const handleCellClick = (id) => {
		revealArea(id);
	};

	return (
		<div className="gridContainer">
			<div
				className={styles.grid}
				style={{ gridTemplateColumns: `repeat(${numCols}, 10px)` }}
			>
				{grid.map((cell) => (
					<div
						key={cell.id}
						id={`cell-${cell.id}`}
						className={styles.gridCell}
						onClick={() => handleCellClick(cell.id)}
					>
						{cell.visible ? cell.char : ""}
					</div>
				))}
			</div>
			<div className="buttonContainer mt-4 flex justify-center space-x-2">
				<button
					onClick={revealAllCharacters}
					className="py-2 px-6 bg-purple-700 text-white font-semibold rounded-lg shadow-md hover:bg-purple-900 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-opacity-75 whitespace-nowrap"
				>
					Reveal All
				</button>
				<button
					onClick={clearAllCharacters}
					className="py-2 px-6 bg-purple-500 text-white font-semibold rounded-lg shadow-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 whitespace-nowrap"
				>
					Clear All
				</button>
			</div>
		</div>
	);
};

export default Grid;
