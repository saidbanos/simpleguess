import React, { useState, useEffect } from 'react';
import anime from 'animejs/lib/anime.es.js';
import './Grid.css';

const Grid = () => {
  const gridSize = 50; // 100x100 grid
  const [grid, setGrid] = useState(Array.from({ length: gridSize * gridSize }, () => ' ')); // Initialize grid with spaces

  // ASCII Art Example - You should replace this with your actual ASCII art
  // Ensure it fits within your grid's dimensions
  const asciiArt = [
    "^++~#%^^~-|~+-+-/=*@?#+-^|#?**~&|/+*+&++@#^##@^**%",
    "*+=$%=*+/^$|@%*=|~%&$|&^=^-/|$=~$/-%/~~~+~$&~^^/#%",
    "=~/@^=#|/-?^+*--&%*%+||%%?|&#-&@@-###@&%#%%#-?+%?*",
    "=$@*|%?/|=|@@^@&?^/|^-%$=$-?/=&$$%%=$~^|?$^+-=#/%%",
    "^?@*?$-&~?^*&&-^##%/?/+$^%/++*$//-^?-^~#^?^+^+~&$=",
    "^++~#%^^~-|~+-+-/=*@?#+-^|#?**~&|/+*+&++@#^##@^**%",
    "*+=$%=*+/^$|@%*=|~%&$|&^=^-/|$=~$/-%/~~~+~$&~^^/#%",
    "=~/@^=#|/-?^+*--&%*%+||%%?|&#-&@@-###@&%#%%#-?+%?*",
    "=$@*|%?/|=|@@^@&?^/|^-%$=$-?/=&$$%%=$~^|?$^+-=#/%%",
    "^?@*?$-&~?^*&&-^##%/?/+$^%/++*$//-^?-^~#^?^+^+~&$=",
    "^++~#%^^~-|~+-+-/=*@?#+-^|#?**~&|/+*+&++@#^##@^**%",
    "*+=$%=*+/^$|@%*=|~%&$|&^=^-/|$=~$/-%/~~~+~$&~^^/#%",
    "=~/@^=#|/-?^+*--&%*%+||%%?|&#-&@@-###@&%#%%#-?+%?*",
    "=$@*|%?/|=|@@^@&?^/|^-%$=$-?/=&$$%%=$~^|?$^+-=#/%%",
    "^?@*?$-&~?^*&&-^##%/?/+$^%/++*$//-^?-^~#^?^+^+~&$=",
    "^++~#%^^~-|~+-+-/=*@?#+-^|#?**~&|/+*+&++@#^##@^**%",
    "*+=$%=*+/^$|@%*=|~%&$|&^=^-/|$=~$/-%/~~~+~$&~^^/#%",
    "=~/@^=#|/-?^+*--&%*%+||%%?|&#-&@@-###@&%#%%#-?+%?*",
    "=$@*|%?/|=|@@^@&?^/|^-%$=$-?/=&$$%%=$~^|?$^+-=#/%%",
    "^?@*?$-&~?^*&&-^##%/?/+$^%/++*$//-^?-^~#^?^+^+~&$=",
    "^++~#%^^~-|~+-+-/=*@?#+-^|#?**~&|/+*+&++@#^##@^**%",
    "*+=$%=*+/^$|@%*=|~%&$|&^=^-/|$=~$/-%/~~~+~$&~^^/#%",
    "=~/@^=#|/-?^+*--&%*%+||%%?|&#-&@@-###@&%#%%#-?+%?*",
    "=$@*|%?/|=|@@^@&?^/|^-%$=$-?/=&$$%%=$~^|?$^+-=#/%%",
    "^?@*?$-&~?^*&&-^##%/?/+$^%/++*$//-^?-^~#^?^+^+~&$=",
    "^++~#%^^~-|~+-+-/=*@?#+-^|#?**~&|/+*+&++@#^##@^**%",
    "*+=$%=*+/^$|@%*=|~%&$|&^=^-/|$=~$/-%/~~~+~$&~^^/#%",
    "=~/@^=#|/-?^+*--&%*%+||%%?|&#-&@@-###@&%#%%#-?+%?*",
    "=$@*|%?/|=|@@^@&?^/|^-%$=$-?/=&$$%%=$~^|?$^+-=#/%%",
    "^?@*?$-&~?^*&&-^##%/?/+$^%/++*$//-^?-^~#^?^+^+~&$=",
    "^++~#%^^~-|~+-+-/=*@?#+-^|#?**~&|/+*+&++@#^##@^**%",
    "*+=$%=*+/^$|@%*=|~%&$|&^=^-/|$=~$/-%/~~~+~$&~^^/#%",
    "=~/@^=#|/-?^+*--&%*%+||%%?|&#-&@@-###@&%#%%#-?+%?*",
    "=$@*|%?/|=|@@^@&?^/|^-%$=$-?/=&$$%%=$~^|?$^+-=#/%%",
    "^?@*?$-&~?^*&&-^##%/?/+$^%/++*$//-^?-^~#^?^+^+~&$=",
    "^++~#%^^~-|~+-+-/=*@?#+-^|#?**~&|/+*+&++@#^##@^**%",
    "*+=$%=*+/^$|@%*=|~%&$|&^=^-/|$=~$/-%/~~~+~$&~^^/#%",
    "=~/@^=#|/-?^+*--&%*%+||%%?|&#-&@@-###@&%#%%#-?+%?*",
    "=$@*|%?/|=|@@^@&?^/|^-%$=$-?/=&$$%%=$~^|?$^+-=#/%%",
    "^?@*?$-&~?^*&&-^##%/?/+$^%/++*$//-^?-^~#^?^+^+~&$=",
    "^++~#%^^~-|~+-+-/=*@?#+-^|#?**~&|/+*+&++@#^##@^**%",
    "*+=$%=*+/^$|@%*=|~%&$|&^=^-/|$=~$/-%/~~~+~$&~^^/#%",
    "=~/@^=#|/-?^+*--&%*%+||%%?|&#-&@@-###@&%#%%#-?+%?*",
    "=$@*|%?/|=|@@^@&?^/|^-%$=$-?/=&$$%%=$~^|?$^+-=#/%%",
    "^?@*?$-&~?^*&&-^##%/?/+$^%/++*$//-^?-^~#^?^+^+~&$=",
    "^++~#%^^~-|~+-+-/=*@?#+-^|#?**~&|/+*+&++@#^##@^**%",
    "*+=$%=*+/^$|@%*=|~%&$|&^=^-/|$=~$/-%/~~~+~$&~^^/#%",
    "=~/@^=#|/-?^+*--&%*%+||%%?|&#-&@@-###@&%#%%#-?+%?*",
    "=$@*|%?/|=|@@^@&?^/|^-%$=$-?/=&$$%%=$~^|?$^+-=#/%%",
    "^?@*?$-&~?^*&&-^##%/?/+$^%/++*$//-^?-^~#^?^+^+~&$=",
  ];

  useEffect(() => {
    // Function to populate the grid with the ASCII art at a specific position
    const fillAsciiArt = (startRow, startCol) => {
      let filledGrid = [...grid];
      asciiArt.forEach((row, rowIndex) => {
        row.split('').forEach((char, colIndex) => {
          if (startRow + rowIndex < gridSize && startCol + colIndex < gridSize) {
            filledGrid[(startRow + rowIndex) * gridSize + (startCol + colIndex)] = char;
          }
        });
      });
      setGrid(filledGrid);
    };

    // Example usage to fill the grid with ASCII art at position (10, 10)
    fillAsciiArt(0, 0);
  }, []); // Empty dependency array means this effect runs once after the initial render

  // Handle click on the grid cell
  const handleCellClick = (index) => {
    console.log(`Cell ${index} clicked`);
    anime({
      targets: `#cell-${index}`,
      scale: [
        {value: 0.9, easing: 'easeOutSine', duration: 200},
        {value: 1, easing: 'easeInOutQuad', duration: 300}
      ],
      backgroundColor: '#F0F0F0',
    });
  };

  return (
    <div className="grid" onClick={handleCellClick}>
      {grid.map((char, index) => (
        <div className="grid-cell" data-index={index} key={index} id={`cell-${index}`}>
          {char}
        </div>
      ))}
    </div>
  );
}

export default Grid;
